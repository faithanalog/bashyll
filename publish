#!/usr/bin/env bash
if [[ $# -lt 1 ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    echo "Usage: $0 <path-to-post>"
    exit 1
fi


file="$1"

title="$(./getPostTitle < "$file")"

#Gets the blurb for the post.
#* Skip the title line
#* Filter out empty lines
#* Remove all sets of '=' or '-' longer than 4 characters, as those are
#  probably part of the title
#* Convert links to text
#* Replace newlines with spaces
#* Take the first 200 characters
#* Remove the last word to prevent partial words
#* Add "..."
blurb="$(tail -n +2 < "$file" \
    | awk '/[^\s]+/' \
    | sed -r 's/===[=]+//g' \
    | sed -r 's/---[-]+//g' \
    | sed -r 's/\[([^]]*)\]\([^)]*\)/\1/g' \
    | tr '\n' ' ' \
    | head -c 200 \
    | sed -r 's/\s[^[:space:]]+\s*$//g')..."

date="$(date '+%b %d, %Y')"

#Replace spaces with dashes in the title, and lowercase it
postid="$(echo "$title" | ./getPostID)"

echo "ID: $postid"
echo "Title: $title"
echo "Date: $date"
echo ""

if grep "$postid" "source/post_list" &> /dev/null; then
    echo -n "Post exists with ID '$postid'. Update post? [y/N] "
    read -r confirm_post
    if [[ "$confirm_post" != "y" ]]; then
        exit 1
    fi
else
    echo -n "Are you sure you want to post '$title'? [y/N] "
    read -r confirm_post
    if [[ "$confirm_post" != "y" ]]; then
        exit 1
    else
        echo -n "$title" > "source/post_title/$postid"
        echo -n "$date" > "source/post_date/$postid"
        echo "$postid" >> "source/post_list"
    fi
fi

#Regenerate blurb when editing posts
echo -n "$blurb" > "source/post_blurb/$postid"
./generatePostHtml "$file" "$postid"

POST="source/post_content/$postid.html" \
TITLE="$title" \
    ./makePost > "./public/posts/$postid.html"

./makeIndices
